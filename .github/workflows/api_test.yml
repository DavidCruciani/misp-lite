name: Python CI
on: ["pull_request", "push"]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
        poetry-version: [1.1.13]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: misp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 15672:15672

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: mailhog/mailhog@v1
        with:
          smtp-bind-port: 1025
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        env:
          PYTHONDONTWRITEBYTECODE: 1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          virtualenvs-path: ~/.virtualenvs

      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: api
      #     key: venv2-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.poetry-version }}-${{ hashFiles('api/poetry.lock') }}

      - name: Install dependencies
        working-directory: api
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        env:
          PYTHONDONTWRITEBYTECODE: 1
        run: poetry install --no-interaction --no-root

      - name: Run DB migrations
        working-directory: api
        run: |
          poetry run alembic upgrade head
        env:
          POSTGRES_HOSTNAME: localhost
          POSTGRES_PORT: 5432
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: misp

      - name: Run tests
        working-directory: api
        run: |
          poetry run pytest
        env:
          POSTGRES_HOSTNAME: localhost
          POSTGRES_PORT: 5432
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: misp
          OAUTH2_SECRET_KEY: e6d14a781f168c29f8ba7dad72c2ad1418375ab9e3878ea671ba87cf76618511
          OAUTH2_ALGORITHM: HS256
          OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES: 30
          CELERY_BROKER_URL: amqp://rabbitmq:rabbitmq@localhost:5672/rabbitmq
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
          MAIL_USERNAME: mail-user
          MAIL_PASSWORD: mail-pwd
          MAIL_PORT: 1025
          MAIL_SERVER: localhost
