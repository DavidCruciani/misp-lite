version: '3.1'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "54321:5432"
    healthcheck:
      test: "pg_isready --username=$$POSTGRES_USER --dbname=misp"
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      OAUTH2_SECRET_KEY: ${OAUTH2_SECRET_KEY}
      OAUTH2_ALGORITHM: ${OAUTH2_ALGORITHM}
      OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES: ${OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES}
      CELERY_BROKER_URL: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
      CELERY_RESULT_BACKEND: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
    volumes:
      - "./api:/code"
    entrypoint: [ "bash", "-c", "./entrypoint.sh" ]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: celery -A app.worker.worker worker --loglevel=info
    volumes:
      - "./api:/code"
    environment:
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      OAUTH2_SECRET_KEY: ${OAUTH2_SECRET_KEY}
      OAUTH2_ALGORITHM: ${OAUTH2_ALGORITHM}
      OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES: ${OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES}
      CELERY_BROKER_URL: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
      CELERY_RESULT_BACKEND: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
    depends_on:
      - redis
      - api

  flower:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: celery -A app.worker.worker flower --loglevel=info
    volumes:
      - ./api:/code
    working_dir: /code
    ports:
      - 5555:5555
    environment:
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      OAUTH2_SECRET_KEY: ${OAUTH2_SECRET_KEY}
      OAUTH2_ALGORITHM: ${OAUTH2_ALGORITHM}
      OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES: ${OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES}
      CELERY_BROKER_URL: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
      CELERY_RESULT_BACKEND: redis://${REDIS_HOSTNAME}:${REDIS_PORT}/${REDIS_CELERY_DB}
    depends_on:
      - worker
      - redis

  redis:
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
